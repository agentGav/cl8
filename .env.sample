# If you use AWS S3-style object storage, you need to set the following 
# environment variables for 'django-storages', the library used by Django
# connect to the environment. These need to be absolute paths.
AWS_SHARED_CREDENTIALS_FILE=.aws.YOURNAME.credentials
AWS_CONFIG_FILE=.aws.YOURNAME.config

# TODO: check if we need this
# AWS_S3_CUSTOM_DOMAIN="https://yourname-cl8.s3.nl-ams.scw.cloud"

# If you use object storage, you need to set the following environment variables
# for 'django-storages', the library used by
DJANGO_AWS_ACCESS_KEY_ID=XXXXXXXXXXXXXXXXXXXX
DJANGO_AWS_SECRET_ACCESS_KEY=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
DJANGO_AWS_STORAGE_BUCKET_NAME=your-bucket-name

# if you are using Scaleway or another S3 compatible provider, instead of AWS
# you need to set the following environment variables to connect to the 
# correct servers. The vales below are defaults for Scaleway
DJANGO_AWS_S3_REGION_NAME=nl-ams
DJANGO_AWS_S3_ENDPOINT_URL=https://s3.nl-ams.scw.cloud 


# Set this to True if you want to allow sign ups to your directory
ACCOUNT_ALLOW_REGISTRATION=False

# This is the connection string used by Django to connect to the database
DATABASE_URL=postgres://localhost:5432/cl8

# TODO: needed?
# DJANGO_ADMIN_URL=admin

# Set this to the domain name of your website - it is set to a wildcard 
# by default for development
DJANGO_ALLOWED_HOSTS=*

DJANGO_DEBUG=True
DJANGO_SECRET_KEY="long-random-string"

# the default settings module. Set this to config.settings.production for production
DJANGO_SETTINGS_MODULE=config.settings.local

# If you ae connecting to Google Spreadsheets to pull data down for profiles you need these.
# SPREADSHEET_KEY is the identifier of the spreadsheet you want to connect to, usually listed
# i the url when you visit a google sheet in a browser
# DJANGO_GSPREAD_SERVICE_ACCOUNT_FILE_PATH="./path-to.google.service-account.json"
# DJANGO_GSPREAD_SPREADSHEET_KEY="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-xxxxxx"


# This defines the slack channel to import users from.
# DJANGO_SLACK_CHANNEL_NAME="public-slack-channel"
# This defines the slack token used when sending API requests from the server
# to fetch users using the slack importers. This is bot token, identified by the 
# xoxb- prefix. You can get this from the slack admin panel

# DJANGO_SLACK_TOKEN="xoxb-111111111111-1111111111111-x1x1x1x1x1x1x1x1x1x1x1x1"

# These define the client id, secret, token, and authorize url used by allauth's 
# social login to connect to slack.

# This is a slack user token, identified by the xoxp- prefix. You can get this from
# the slack admin panel 
# DJANGO_SLACK_USER_TOKEN="xoxp-111111111111-111111111111-1111111111111-x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1"
# DJANGO_SLACK_SIGNIN_AUTHORIZE_URL="https://your-slack-workspace.slack.com/openid/connect/authorize"

# Thse define the airtables used to pull data down for profiles and import.
# the BEARER token is send with every API request, and the BASE and TABLE
# identify the airtable and the table within it to connect fetch data from

# Setting this stops python creating .pyc files in the workspace
PYTHONDONTWRITEBYTECODE=1

# Used by django to set a more convenient breakpoint when debugging
PYTHONBREAKPOINT="ipdb.set_trace"